name: CI/CD Production

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and test app
    runs-on: ubuntu-latest
    env:
      CI: true
      REACT_APP_MAD_LEARNING_API: mad-learning-api
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm ci
    - run: npm run build
    - run: npm test
  build-and-publish-image:
    name: Build and publish Docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      APP_NAME: mad-learning-web
      REGISTRY_NAME: itemadacr.azurecr.io
      NAMESPACE: production-mad-learning
    steps:
      - uses: actions/checkout@master
      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}
          username: ${{ secrets.MAD_DOCKER_PUSH_USERNAME }}
          password: ${{ secrets.MAD_DOCKER_PUSH_PASSWORD }}
      # Container build and push to a Azure Container registry (ACR)
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:${{ github.sha }} -t ${{ env.REGISTRY_NAME }}/${{ env. APP_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/k8s-set-context@v1
        with:
          method: service-account
          k8s-url: ${{ secrets.MAD_K8S_URL }}
          k8s-secret: ${{ secrets.MAD_K8S_CI_SECRET }}
        id: setcontext
      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deployment.yaml
            kubernetes/service.yaml
            kubernetes/ingress-production.yaml
          images: ${{ env.REGISTRY_NAME }}/${{ env.APP_NAME }}:latest
          namespace: ${{ env.NAMESPACE }}