name: CI/CD Production

on:
  deployment

jobs:
  build-and-test:
    name: Build and test app
    runs-on: ubuntu-latest
    env:
      CI: true
      REACT_APP_MAD_LEARNING_API: mad-learning-api
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm ci
    - run: npm run build
    - run: npm test
  build-and-publish-image:
    name: Build and publish Docker image
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      REGISTRY_NAME: itetechmadacr
      CLUSTER_NAME: ite-tech-mad-aks
      CLUSTER_RESOURCE_GROUP: ite-tech-mad-aks-rg
      NAMESPACE: production
    steps:
      - uses: actions/checkout@master
      # Connect to Azure Container registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }} 
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # Container build and push to a Azure Container registry (ACR)
      - run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/mad-learning-web:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/mad-learning-web:${{ github.sha }}
      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
      # Create imagepullsecret for Azure Container registry (ACR)
      - uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}
      # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deployment.yaml
            kubernetes/service.yaml
            kubernetes/ingress-production.yaml
          images: |
            ${{ env.REGISTRY_NAME }}.azurecr.io/mad-learning-web:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.REGISTRY_NAME }}-registry-connection
          namespace: ${{ env.NAMESPACE }}